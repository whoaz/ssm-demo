<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.helloz.demo.dao.EmployeeMapper">
    <resultMap id="BaseResultMap" type="org.helloz.demo.entity.Employee">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="gender" jdbcType="CHAR" property="gender"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="deptId" jdbcType="INTEGER" property="deptid"/>
        <association property="dept" javaType="org.helloz.demo.entity.Department">
            <id column="dept_id" property="id"/>
            <result column="dept_name" property="name"/>
        </association>
    </resultMap>
    <sql id="Base_Column_List">
    e.id, e.name, e.gender,e.email, e.deptId,d.id 'dept_id',d.name 'dept_name'
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from employee e left join department d on e.deptid = d.id
        where e.id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByPage" parameterType="org.helloz.demo.entity.Employee" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from employee e left join department d on e.deptid = d.id
        <where>
            <trim prefix="WHERE" prefixOverrides="AND|OR">
                <if test="name != null">
                    name like #{name}
                </if>
                <if test="gender != null">
                    and gender = #{gender }
                </if>
            </trim>
        </where>
        ORDER BY e.id
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="org.helloz.demo.entity.Employee">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into employee (name, gender, email,deptId)
        values (#{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, #{email,jdbcType=VARCHAR},#{deptid,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="org.helloz.demo.entity.Employee">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="deptid != null">
                deptId,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=CHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="deptid != null">
                #{deptid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.helloz.demo.entity.Employee">
        update employee
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=CHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="deptid != null">
                deptId = #{deptid,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.helloz.demo.entity.Employee">
    update employee
    set name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      deptId = #{deptid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>